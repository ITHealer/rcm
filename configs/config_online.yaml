# ============================================================================
# ONLINE SERVING CONFIGURATION
# ============================================================================
# Configuration for online inference and API serving

# ============================================================================
# SYSTEM
# ============================================================================
system:
  name: "recommendation-online-serving"
  version: "1.0.0"
  environment: "development"
  log_level: "INFO"

# ============================================================================
# API SERVER
# ============================================================================
api:
  host: "0.0.0.0"
  port: 8010
  workers: 4
  reload: false  # Set to true in development
  
  # CORS
  cors:
    enabled: true
    origins: ["*"]
    methods: ["GET", "POST"]
    headers: ["*"]
  
  # Rate limiting
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    burst: 10

# ============================================================================
# MODEL ARTIFACTS
# ============================================================================
models:
  dir: "models"
  version: "latest"  # or specific version like "v20251024_120504"
  
  # Auto-reload
  auto_reload:
    enabled: true
    check_interval_seconds: 300  # Check for new version every 5 min
  
  # Fallback
  fallback_version: null  # Fallback if latest fails

# ============================================================================
# REDIS CACHE
# ============================================================================
redis:
  host: "localhost"
  port: 6381
  db: 0
  password: null
  max_connections: 50
  socket_timeout: 5
  socket_connect_timeout: 2
  decode_responses: false  # For binary data
  
  # TTL (Time To Live) in seconds
  ttl:
    user_embedding: 604800      # 7 days
    post_embedding: 2592000      # 30 days
    cf_similarity: 86400         # 1 day
    user_stats: 86400            # 1 day
    author_stats: 86400          # 1 day
    following: 3600              # 1 hour
    trending: 300                # 5 minutes
    feed_cache: 300              # 5 minutes


telemetry:
  enabled: true
  mode: "queue"               # queue | direct | off
  batch_size: 200
  flush_interval_ms: 1000
  max_queue: 100000
  drop_on_overflow: true

  # mysql:
  #   enabled: true
  #   url: "mysql+pymysql://user:password@mysql-host:3306/wayjet"
  #   pool_size: 20
  #   max_overflow: 40
  #   pool_recycle: 1800
  #   pool_pre_ping: true
  mysql:                     # vẫn dùng key "mysql" cho thuận lợi code, nhưng là DSN Postgres
    enabled: true
    url: "postgresql+psycopg2://postgres:123456@localhost:5551/rcm_db"
    pool_size: 20
    max_overflow: 40
    pool_recycle: 1800
    pool_pre_ping: true

  # (khuyến nghị) dùng Redis stream làm hàng đợi bền bỉ
  redis_queue:
    enabled: true
    key: "telemetry:events"
    maxlen: 200000

# server=14.225.220.56;port=15479;database=wayjet_system;user=way_root;password=

backend_db:
  enabled: true
  url: ""
  pool_size: 20
  max_overflow: 40
  pool_recycle: 1800
  pool_pre_ping: true
  
recall:
  channels:
    cf_realtime:
      enabled: true
      count: 150
      k_per_seed: 50
      max_recent: 20
      weight_decay: 0.95


realtime_ingest:
  enabled: true
  poll_interval_seconds: 15
  max_rows_per_tick: 2000
  backoff_on_error_seconds: 5
  mysql:
    interactions_table: "wayjet_system.PostReaction"   # schema.table
    posts_table: "wayjet_system.Post"
    id_column: "Id"
    time_column: "CreateDate"          # <-- sửa
    user_id_column: "UserId"
    post_id_column: "PostId"
    reaction_type_column: "ReactionTypeId"   # <-- thêm
    status_column: "Status"                  # dùng để lọc status=10
    post_author_column: "UserId"            # Post.UserId
  watermark_key: "ingest:backend:last_id"
  action_weights:
    like: 1.0
    comment: 1.5
    share: 2.0
    save: 1.2
    view: 0.2
  update_embedding_sample_rate: 0.2

# ============================================================================
# MULTI-CHANNEL RECALL
# ============================================================================
recall:
  target_count: 1000
  timeout_ms: 100  # Max time for recall
  
  # Channel configuration
  channels:
    # Channel 1: Following Feed
    following:
      enabled: true
      count: 400
      weight: 0.40
      recent_hours: 1000 # dev thì nới ra 48h
      cache_ttl: 1800  # 30 minutes
    
    # Channel 2: Collaborative Filtering
    collaborative_filtering:
      enabled: true
      count: 300
      weight: 0.30
      recent_days: 7
      top_k_similar_users: 50
      cache_ttl: 3600  # 1 hour
    
    # Channel 3: Content-Based
    content_based:
      enabled: true
      count: 200
      weight: 0.20
      min_post_age_hours: 6
      use_faiss: true
      cache_ttl: 3600  # 1 hour
    
    # Channel 4: Trending
    trending:
      enabled: true
      count: 100
      weight: 0.10
      trending_window_hours: 720 #6
      min_engagement_count: 5
      cache_ttl: 300  # 5 minutes
      
      # Trending score weights
      view_weight: 1.0
      like_weight: 2.0
      comment_weight: 3.0
      share_weight: 5.0

# ============================================================================
# RANKING
# ============================================================================
ranking:
  top_k: 100  # Rank top 100 from recall
  use_scaler: true
  timeout_ms: 80  # Max time for ranking
  
  # Batch processing
  batch_size: 100
  
  # Feature cache
  feature_cache:
    enabled: true
    ttl: 3600  # 1 hour

# ============================================================================
# RE-RANKING & BUSINESS RULES
# ============================================================================
reranking:
  max_consecutive_same_author: 2
  max_same_author_in_feed: 5
  freshness_enabled: true
  freshness_boost_hours: 6
  freshness_boost_factor: 1.1
  quality_enabled: true
  quality_status_ok_value: 10
  content_dedup_enabled: true
  use_min_score: false     # để nguyên false trừ khi bạn muốn lọc theo điểm ML
  min_score: 0.3
  timeout_ms: 50  # Max time for reranking
  
  # Diversity rules
  diversity:
    enabled: true
    max_consecutive_same_author: 2
    max_same_author_in_feed: 5
    max_same_topic_in_row: 3
  
  # Freshness boost
  freshness:
    enabled: true
    boost_hours: 24
    boost_factor: 1.5
  
  # Quality filter
  quality:
    enabled: true
    min_score: 0.3
    remove_low_quality: true
  
  # Engagement velocity boost
  velocity:
    enabled: true
    boost_factor: 1.2
    min_engagement_per_hour: 10

# ============================================================================
# FRIEND RECOMMENDATION
# ============================================================================
friend_recommendation:
  enabled: true
  default_limit: 20
  max_limit: 50
  
  # Scoring weights
  weights:
    mutual_friends: 0.40
    embedding_similarity: 0.30
    cf_similarity: 0.30
  
  # Cache
  cache_ttl: 3600  # 1 hour

# ============================================================================
# PERFORMANCE
# ============================================================================
performance:
  # Target latencies (ms)
  target_latency:
    feed: 200
    friend_recommendation: 100
    trending: 50
  
  # Timeouts (ms)
  timeout:
    total: 500
    recall: 100
    ranking: 100
    reranking: 50
  
  # Parallelization
  parallel:
    recall_channels: true  # Run channels in parallel
    feature_extraction: true

# ============================================================================
# USER EMBEDDING UPDATES (REAL-TIME)
# ============================================================================
user_embedding:
  # Real-time update strategy
  real_time_update:
    enabled: true
    update_on_interaction: true
    
    # Interaction types that trigger update
    trigger_actions:
      - like
      - comment
      - share
      - save
    
    # Update method
    method: "incremental"  # incremental or full_recompute
    
    # Incremental update (weighted average)
    incremental:
      learning_rate: 0.1  # Weight for new interaction
      min_interactions_for_update: 1
    
    # Full recompute (aggregate all recent)
    full_recompute:
      lookback_hours: 24
      min_interactions: 5
  
  # Async update (non-blocking)
  async_update:
    enabled: true
    queue: "redis"  # redis or kafka
    workers: 4

# ============================================================================
# CACHE WARMING
# ============================================================================
cache_warming:
  enabled: true
  on_startup: true
  
  # Strategies
  strategies:
    # 1. Active users
    active_users:
      enabled: true
      lookback_hours: 24
      max_users: 10000
      priority: "high"
    
    # 2. Trending posts
    trending:
      enabled: true
      refresh_interval_minutes: 5
      priority: "high"
    
    # 3. Popular content
    popular_content:
      enabled: true
      top_n_posts: 1000
      priority: "medium"
    
    # 4. CF similarities
    cf_similarities:
      enabled: true
      top_users: 5000
      priority: "medium"

# ============================================================================
# MONITORING & METRICS
# ============================================================================
monitoring:
  enabled: true
  
  # Metrics to track
  metrics:
    - latency
    - recall_count
    - ranking_score_distribution
    - diversity_score
    - cache_hit_rate
    - error_rate
  
  # Export
  export:
    prometheus: true
    statsd: false
  
  # Alerts
  alerts:
    latency_threshold_ms: 300
    error_rate_threshold: 0.05
    cache_hit_rate_threshold: 0.80

# ============================================================================
# LOGGING
# ============================================================================
logging:
  level: "INFO"
  format: "[%(asctime)s] %(levelname)s - %(name)s - %(message)s"
  file: "logs/online_serving.log"
  max_bytes: 10485760  # 10MB
  backup_count: 5
  
  # Request logging
  request_logging:
    enabled: true
    log_body: false
    log_response: false

# ============================================================================
# A/B TESTING
# ============================================================================
ab_testing:
  enabled: false  # Enable in Phase 3
  
  experiments:
    - name: "recall_weights"
      variants:
        - name: "control"
          weight: 0.5
          config:
            following_weight: 0.40
            cf_weight: 0.30
            content_weight: 0.20
            trending_weight: 0.10
        
        - name: "variant_a"
          weight: 0.5
          config:
            following_weight: 0.30
            cf_weight: 0.40
            content_weight: 0.20
            trending_weight: 0.10

# ============================================================================
# SAFETY & CONTENT FILTERING
# ============================================================================
safety:
  enabled: true
  
  # Filters
  filters:
    - name: "nsfw"
      enabled: true
    
    - name: "spam"
      enabled: true
    
    - name: "low_quality"
      enabled: true
      min_quality_score: 0.3

# ============================================================================
# FALLBACK
# ============================================================================
fallback:
  # When personalization fails
  personalization_failure:
    strategy: "trending"  # trending, popular, random
  
  # When no recall candidates
  no_candidates:
    strategy: "popular"
    fallback_count: 50

# ============================================================================
# OPTIMIZATION
# ============================================================================
optimization:
  # Connection pooling
  connection_pool:
    redis:
      max_connections: 50
      min_idle: 10
  
  # Batch operations
  batch:
    feature_extraction: true
    redis_ops: true
    batch_size: 100

# ============================================================================
# DEVELOPMENT
# ============================================================================
development:
  # Debug mode
  debug: false
  
  # Mock data
  use_mock_data: false
  
  # Profiling
  profiling:
    enabled: false
    sample_rate: 0.01